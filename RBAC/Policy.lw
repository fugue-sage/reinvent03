composition

import Fugue.System.Policy as .

default: Account(accountId: "fugue-1510436130857")
staging: Account(accountId: "staging-1510511017416")
production: Account(accountId: "production-1510511407707")

alice: User {userId: "alice"}
bob: User {userId: "bob"}
charlie: User {userId: "charlie"}
david: User {userId: "david"}

Process network: AliasedProcess {alias: "network"}

aliceAdmin: accountRules {
        principals: [alice],
        accounts: [AllAccounts],
        actions: allAccountActions}

bobCanRunInStaging: accountRules {
          principals: [bob],
          accounts: [staging],
          actions: [AccountRunProcess,
            AccountStatusProcess,
            AccountUpdateProcess,
            AccountKillProcess]}

bobCanListProduction: accountRules {
          principals: [bob],
          accounts: [production],
          actions: [AccountStatusProcess]}

charlieAcctTable: accountTableRules { principals: [charlie],
                                    actions: allAccountTableActions }

davidStatusNetwork: Rule {
          principal: david,
          subject: ProcessType(network),
          action: ProcessAction(ProcessGetStatus)}